2019/11/12 function をconst リテラルで書くと、変なとこから呼び出されて未定義エラー
実行が不規則なのが悪いんだけど。

2019/10/30 hoge=(obj.prop={}) //は作ったオブジェの参照がhogeとpropに入る。

条件付きconstはifに入れるとスコープ無理だから、三項演算子など式で代入する必要ある。
それでも無理なら即時関数＋returnで。

user.jsでドメイン超えて、セッションID的なものが欲しい、クリックループを防ぐことができるし。
historyは無理、リファラーでURLにハッシュでTIMEくっつければできそうだけど、URL汚すのは嫌や。
Cookieかローカルストレージを調べてる。GM_*valueもできるけど、セッションIDは無理そう。

jsでCookie追加すると後ろに追加されていく。

2019/10/29 window.unsafeWindow Wがキャメルコートで途中からのは大文字なので注意。
// @grant none を指定してない場合。
conDoW(window)をすると、window.unsafeWindow が見える。
コンソールからwindowすると｛parent Window〜 alertでunsafeWindowが無い、これが本当のwindow
偽物→window.unsafWindow←本物を一時避難
//gmが終わったから？本物→偽物と上書きされ、unsafwindowが消える。

スクリプトでwindow.)unsafeWindow.hoge←などプロパティに書くと、
戻されたあとは、window.)hogeになる。

user.jsが最後まで達すると？window = window.unsafeWindow となる。unが元々のwin。
GM_関数はコンソールからは使えないが、定義済み関数からは使える。

2019/10/29 セミコロン省略すると変なとこで詰まる。次の行が()スタートだと関数実行とみなされる。

2019/10/29 importをすると、exp以外もすべて一回実行する。

2019/10/24 ブロックでスコープが見つからない。
if (1) {
	const a = 0
}
else {
	const a = 1
}
conDoW(a)

2019/10/24 #js onclick=functionが正解,onclick=()=>は駄目ぽ。
element.onclick()と呼ばれるので、アロー関数だとthisがwindowになってしまう。

2019/10/24 #js insertAdjacentText("beforbegin","外側")、textContent+=より速いらしい。記憶。

2019/10/24 #js user.jsで戻った時に実行したくない、自動ジャンプだと戻れなくなるから。
history.replaceで#hogeとつけることで、実行回避できた。
location+=#hogeでもできる、ただ失敗するとこっちはループする危険もある。

2019/01/07 #js firefox greasemonkey で@require したらcacheが出来て更新できない。
拡張フォルダに作られるタイプで、cacheクリアとかほぼ無理
もう嫌だと、ローカル鯖にしよう
mac なら 公開したいフォルダに移動して python -m SimpleHTTPServer 8888
終了はC-c
http://localhost:8888/mypo.user.js